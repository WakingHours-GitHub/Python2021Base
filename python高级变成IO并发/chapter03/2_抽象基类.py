"""
abc模块: abstract base class. 缩写.
当作Java中接口. Interference. 继承一个父类, 但是可以继承多个接口. 不能够实例化.
我们实现class的时候, 不需要继承什么特定的父类. 一个类有什么特性, 取决于它所实现的魔法函数.
不同魔法函数赋予了class的特性.
鸭子类型和魔法函数, 构成了Python的协议!
使得我们不需要继承什么类型, 或者什么类, 什么接口才能有某些特性.
而是通过实现魔法方法, 使类就成为某种类型的对象.
比如我们实现了__iter__, 或者getitem方法, 这个类的对象, 就具有了可迭代的属性. 这个对象是这个类, 也是可迭代对象.
这种特性, 在Python也称之为协议. 我们遵循这种协议写出来的代码, 才是最python的python.


抽象基类: 写好一些方法. 继承这个类的类, 需要实现所有的方法
    这个类不可以被实例化.
    这个类更像是一种规范.
    作用:
        我们希望在某些情况之下判定某个对象的类型.
        我们需要强制某个子类必须实现某些方法.
    我们使用抽象基类是为了查看一些操作规范.


















"""