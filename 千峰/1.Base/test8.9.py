# 位运算
'''
&   与
|   或
~   取反
^   异或
<<  左移
>>  右移
'''
# 上述的这些操作都是按位操作
# 例：
'''
3 & 2

3   0000 0011
2   0000 0010
-----------------
    0000 0010
'''

'''
取反 ~5
5   0000 0101
~5  1111 1010 (补码)

取反:0000 0101
+1: 0000 0110
最后结果位6

print(~5) # -6

'''

# 异或^ 相同为0 不同为1
print(3 ^ 5)

'''
3   0000 0011
5   0000 0101
---------------
    0000 0110
    得6


'''

# 右移和左移
'''
右移和左移是对二进制说的
右移,左侧补符号位. m << n : m * 2^n (就是m * 2的n次幂,或者说m * n个2)
左移,右侧补0.    m // 2的n次方 (就是m整除)

'''



# 三目运算符
'''
C, java的三木操作符:
格式: 表达式 ? 真 : 假
但python不是这样的格式

python的格式: 真 if 表达式 else 假
判读表达式是True还是False
若表达式为True, 则执行真
若表达式为False, 则执行假

'''

# 例子
a = 2
b = 4
result = (a + b) if a < b else  (b - a)
print(result) # 6


#运算符的优先级
'''
由上到下, 优先级依次变低
    **
    ~
    + - ( 符号运算符, 取正, 取负)
    * / // %
    + - (算术运算符, 加减)
    << >>
    &
    ^
    |
    == != > >= < <=
    is is not
    not
    and
    or
'''



